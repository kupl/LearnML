{
	(fun n -> n*(-1) <= 0);[-5; 10; 3; -10; 8; 0]=>[10; 3; 8; 0];
	(fun n -> (n mod 2) = 0);[1;3;2;4;6;3;0]=>[2;4;6;0];
	(fun (b: bool) -> b);[true; true; false; false]=>[true; true];
	(fun n -> false);[1; 2; 3; 4; 5]=>[];
	(fun lst -> List.length lst = 2);[[1; 2; 3]; [1; 2]; [2; 1]; [3; 4; 5; 6]]=>[[1; 2]; [2; 1]];
	(fun (x,y) -> x && y);[(true, false); (false, false); (true, true); (false, true)]=>[(true, true)];
	(fun lst -> lst <> []);[[1;3;5];[2;4;6];[];[1;2;3;4]]=>[[1;3;5]; [2;4;6]; [1;2;3;4]];
	(fun (a,b,c) -> (a+b)>c);[(1,2,3); (5,4,3); (-1,-2,0); (4,5,1); (1,1,1)] => [(5,4,3); (4,5,1); (1,1,1)];
	(fun lst -> let rec sum l = match l with |[] -> 0 |hd::tl -> hd+(sum tl) in (sum lst) > 5);[[1];[1;2];[1;2;3];[-1;2;3;4]]=>[[1;2;3];[-1;2;3;4]];
	(fun (x,y,lst) -> let rec sum l = match l with |[] -> 0 |hd::tl -> hd+(sum tl) in (sum lst) > (x+y));[(1,3,[1;2;3]); (4,2,[1;3]); (-1,3,[2;3;4])] => [(1,3,[1;2;3]); (-1,3,[2;3;4])];
}