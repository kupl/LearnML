../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/09/sub1.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec check (m : lambda)  =
 (match m with
|P (a, V b) -> if (a = b) then true
 else false
|P (a, P (b, c)) -> if (a = b) then check (P ((b, c)))
 else if (check (P ((a, c))) = true) then true
 else if (check (P ((b, c))) = true) then true
 else false
|P (a, C (b, c)) -> if (check (P ((a, b))) = true) then if (check (P ((a, c))) = true) then true
 else false
 else false)

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_18/sub9.ml Score : 0
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking lam lst  =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check  : (lambda -> bool) =
fun lam -> checking (lam) ([])

let _  = check (P (("a", V ("a"))))

let _  = check (P (("a", P (("a", V ("a"))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("b"))))))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("a"))))))))

let _  = check (P (("a", V ("b"))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("c"))))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("c"))))))))

-----------------------------
Call graph (sub)
-----------------------------
Node :
{check -> (45777 :
Input : (m : lambda)
Output : bool
Body :
 (match m with
|P (a, V b) -> if (a = b) then true
 else false
|P (a, P (b, c)) -> if (a = b) then check (P ((b, c)))
 else if (check (P ((a, c))) = true) then true
 else if (check (P ((b, c))) = true) then true
 else false
|P (a, C (b, c)) -> if (check (P ((a, b))) = true) then if (check (P ((a, c))) = true) then true
 else false
 else false)}
Edge :
{(45777, 45777) -> }
Starting : 45777
-----------------------------
Call graph (sol)
-----------------------------
Node :
{check -> (45743 :
Input : (lam : lambda)
Output : bool
Body : checking (lam) ([]),

checking -> (45742 :
Input : (lam : lambda) (lst : string list)
Output : bool
Body :
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))}
Edge :
{(45742, 45742) -> ,
(45743, 45742) -> }
Starting : 45743
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{check -> check}
------Remainings in solution ------
{checking}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60584 : ? (?) ([]))

Decls :

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

Callers : {check}
}
-----------------------------
Patch
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check (m : lambda)  = checking (m) ([])

Time : 0.00156784057617
../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/09/sub15.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check met  =
let rec checkArea id m  =
 (match m with
|V n -> __list_exists__ (
fun x -> (x = n)) (id)
|C (s1, s2) -> (checkArea (id) (s1) && checkArea (id) (s2))
|P (id2, m) -> checkArea ((id2 :: id)) (m))
 in

 (match met with
|P (id, m) -> checkArea ([id]) (m)
|_ -> false)

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_18/sub55.ml Score : 3
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checklambda  : (var list -> (lambda -> bool)) =
fun lst lam ->
 (match lam with
|V x -> __list_mem__ (x) (lst)
|P (x, l) -> checklambda ((x :: lst)) (l)
|C (l1, l2) -> (checklambda (lst) (l1) && checklambda (lst) (l2)))

let check  : (lambda -> bool) =
fun lam -> checklambda ([]) (lam)

-----------------------------
Call graph (sub)
-----------------------------
Node :
{__list_exists__ -> (47075 :
Input : (pred : (#961732 -> bool)) (lst : #961732 list)
Output : bool
Body :
 (match lst with
|[] -> false
|hd::tl -> (pred (hd) || __list_exists__ (pred) (tl))),

check -> (47099 :
Input : (met : lambda)
Output : bool
Body :
 (match met with
|P (id, m) -> checkArea ([id]) (m)
|_ -> false),

checkArea -> (47100 :
Input : (id : string list) (m : lambda)
Output : bool
Body :
 (match m with
|V n -> __list_exists__ (
fun (x : string) -> (x = n)) (id)
|C (s1, s2) -> (checkArea (id) (s1) && checkArea (id) (s2))
|P (id2, m) -> checkArea ((id2 :: id)) (m))}
Edge :
{(47075, 47075) -> ,
(47099, 47100) -> ,
(47100, 47075) -> ,
(47100, 47100) -> }
Starting : 47099
-----------------------------
Call graph (sol)
-----------------------------
Node :
{__list_mem__ -> (47039 :
Input : elem (lst : #961019 list)
Output : bool
Body :
 (match lst with
|[] -> false
|hd::tl -> ((hd = elem) || __list_mem__ (elem) (tl))),

check -> (47065 :
Input : (lam : lambda)
Output : bool
Body : checklambda ([]) (lam),

checklambda -> (47064 :
Input : (lst : string list) (lam : lambda)
Output : bool
Body :
 (match lam with
|V x -> __list_mem__ (x) (lst)
|P (x, l) -> checklambda ((x :: lst)) (l)
|C (l1, l2) -> (checklambda (lst) (l1) && checklambda (lst) (l2)))}
Edge :
{(47039, 47039) -> ,
(47064, 47039) -> ,
(47064, 47064) -> ,
(47065, 47064) -> }
Starting : 47065
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{__list_exists__ -> __list_mem__,
check -> check,
checkArea -> checklambda}
------Remainings in solution ------
{}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60525 : ?)

Decls :
,Exp : Modify (60533 : ? (?) (?))

Decls :
,Exp : Modify (60538 : ? (?) (?))

Decls :
,Exp : Modify (60543 : ? (?) (?))

Decls :
,Exp : Modify (60551 : ? ((? :: ?)) (?))

Decls :
,Exp : Modify (60561 : ? ([]) (?))

Decls :
}
-----------------------------
Patch
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check met  =
let rec checkArea id m  =
 (match m with
|V n -> __list_exists__ (
fun x -> (x = n)) (id)
|C (s1, s2) -> (checkArea (id) (s1) && checkArea (id) (s2))
|P (id2, m) -> checkArea ((id2 :: id)) (m))
 in
checkArea ([]) (met)

Time : 1.40720391273

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/09/sub16.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check met  =
let rec checkArea id m  =
 (match m with
|V n -> __list_exists__ (
fun x -> (x = n)) (id)
|C (s1, s2) -> (checkArea (id) (s1) && checkArea (id) (s2))
|P (id2, m) -> checkArea ((id2 :: id)) (m))
 in

 (match met with
|P (id, m) -> checkArea ([id]) (m)
|_ -> false)

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_18/sub55.ml Score : 3
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checklambda  : (var list -> (lambda -> bool)) =
fun lst lam ->
 (match lam with
|V x -> __list_mem__ (x) (lst)
|P (x, l) -> checklambda ((x :: lst)) (l)
|C (l1, l2) -> (checklambda (lst) (l1) && checklambda (lst) (l2)))

let check  : (lambda -> bool) =
fun lam -> checklambda ([]) (lam)

-----------------------------
Call graph (sub)
-----------------------------
Node :
{__list_exists__ -> (47075 :
Input : (pred : (#961732 -> bool)) (lst : #961732 list)
Output : bool
Body :
 (match lst with
|[] -> false
|hd::tl -> (pred (hd) || __list_exists__ (pred) (tl))),

check -> (47099 :
Input : (met : lambda)
Output : bool
Body :
 (match met with
|P (id, m) -> checkArea ([id]) (m)
|_ -> false),

checkArea -> (47100 :
Input : (id : string list) (m : lambda)
Output : bool
Body :
 (match m with
|V n -> __list_exists__ (
fun (x : string) -> (x = n)) (id)
|C (s1, s2) -> (checkArea (id) (s1) && checkArea (id) (s2))
|P (id2, m) -> checkArea ((id2 :: id)) (m))}
Edge :
{(47075, 47075) -> ,
(47099, 47100) -> ,
(47100, 47075) -> ,
(47100, 47100) -> }
Starting : 47099
-----------------------------
Call graph (sol)
-----------------------------
Node :
{__list_mem__ -> (47039 :
Input : elem (lst : #961019 list)
Output : bool
Body :
 (match lst with
|[] -> false
|hd::tl -> ((hd = elem) || __list_mem__ (elem) (tl))),

check -> (47065 :
Input : (lam : lambda)
Output : bool
Body : checklambda ([]) (lam),

checklambda -> (47064 :
Input : (lst : string list) (lam : lambda)
Output : bool
Body :
 (match lam with
|V x -> __list_mem__ (x) (lst)
|P (x, l) -> checklambda ((x :: lst)) (l)
|C (l1, l2) -> (checklambda (lst) (l1) && checklambda (lst) (l2)))}
Edge :
{(47039, 47039) -> ,
(47064, 47039) -> ,
(47064, 47064) -> ,
(47065, 47064) -> }
Starting : 47065
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{__list_exists__ -> __list_mem__,
check -> check,
checkArea -> checklambda}
------Remainings in solution ------
{}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60525 : ?)

Decls :
,Exp : Modify (60533 : ? (?) (?))

Decls :
,Exp : Modify (60538 : ? (?) (?))

Decls :
,Exp : Modify (60543 : ? (?) (?))

Decls :
,Exp : Modify (60551 : ? ((? :: ?)) (?))

Decls :
,Exp : Modify (60561 : ? ([]) (?))

Decls :
}
-----------------------------
Patch
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check met  =
let rec checkArea id m  =
 (match m with
|V n -> __list_exists__ (
fun x -> (x = n)) (id)
|C (s1, s2) -> (checkArea (id) (s1) && checkArea (id) (s2))
|P (id2, m) -> checkArea ((id2 :: id)) (m))
 in
checkArea ([]) (met)

Time : 1.40837597847

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/09/sub17.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec check m  =
let rec append m1 m2  =
 (match m1 with
|h::t -> if __list_mem__ (h) (m2) then append (t) (m2)
 else append (t) ((h :: m2))
|[] -> m2)
 in

let rec check2 m l  =
 (match m with
|V n -> l
|P (n, m2) -> if __list_mem__ (n) (l) then check2 (m2) (l)
 else check2 (m2) ((n :: l))
|C (m1, m2) -> append (check2 (m1) (l)) (check2 (m2) (l)))
 in

let rec check3 m l  =
 (match m with
|V n -> if __list_mem__ (n) (l) then true
 else false
|P (n, m2) -> check3 (m2) (l)
|C (m1, m2) -> (check3 (m1) (l) && check3 (m2) (l)))
 in

let l  = check2 (m) ([])
 in
check3 (m) (l)

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/14/sub55.ml Score : 4
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check arg1  =
let rec check2 arg2 my_list  =
 (match arg2 with
|V n -> __list_mem__ (n) (my_list)
|P (a, b) -> check2 (b) (__list_append__ (my_list) ((a :: [])))
|C (c, d) -> (check2 (c) (my_list) && check2 (d) (my_list)))
 in
check2 (arg1) ([])

-----------------------------
Call graph (sub)
-----------------------------
Node :
{__list_mem__ -> (49718 :
Input : elem (lst : #998750 list)
Output : bool
Body :
 (match lst with
|[] -> false
|hd::tl -> ((hd = elem) || __list_mem__ (elem) (tl))),

append -> (49744 :
Input : (m1 : string list) (m2 : string list)
Output : string list
Body :
 (match m1 with
|h::t -> if __list_mem__ (h) (m2) then append (t) (m2)
 else append (t) ((h :: m2))
|[] -> m2),

check -> (49743 :
Input : (m : lambda)
Output : bool
Body :
let l  : string list = check2 (m) ([])
 in
check3 (m) (l),

check2 -> (49745 :
Input : (m : lambda) (l : string list)
Output : string list
Body :
 (match m with
|V n -> l
|P (n, m2) -> if __list_mem__ (n) (l) then check2 (m2) (l)
 else check2 (m2) ((n :: l))
|C (m1, m2) -> append (check2 (m1) (l)) (check2 (m2) (l))),

check3 -> (49746 :
Input : (m : lambda) (l : string list)
Output : bool
Body :
 (match m with
|V n -> if __list_mem__ (n) (l) then true
 else false
|P (n, m2) -> check3 (m2) (l)
|C (m1, m2) -> (check3 (m1) (l) && check3 (m2) (l)))}
Edge :
{(49718, 49718) -> ,
(49743, 49745) -> ,
(49743, 49746) -> ,
(49744, 49718) -> ,
(49744, 49744) -> ,
(49745, 49718) -> ,
(49745, 49744) -> ,
(49745, 49745) -> ,
(49746, 49718) -> ,
(49746, 49746) -> }
Starting : 49743
-----------------------------
Call graph (sol)
-----------------------------
Node :
{__list_append__ -> (49686 :
Input : (lst1 : #998072 list) (lst2 : #998072 list)
Output : #998009 list
Body : (lst1 @ lst2),

__list_mem__ -> (49683 :
Input : elem (lst : #998041 list)
Output : bool
Body :
 (match lst with
|[] -> false
|hd::tl -> ((hd = elem) || __list_mem__ (elem) (tl))),

check -> (49708 :
Input : (arg1 : lambda)
Output : bool
Body : check2 (arg1) ([]),

check2 -> (49709 :
Input : (arg2 : lambda) (my_list : string list)
Output : bool
Body :
 (match arg2 with
|V n -> __list_mem__ (n) (my_list)
|P (a, b) -> check2 (b) (__list_append__ (my_list) ((a :: [])))
|C (c, d) -> (check2 (c) (my_list) && check2 (d) (my_list)))}
Edge :
{(49683, 49683) -> ,
(49708, 49709) -> ,
(49709, 49683) -> ,
(49709, 49686) -> ,
(49709, 49709) -> }
Starting : 49708
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{__list_mem__ -> __list_mem__,
append -> __list_append__,
check -> check,
check3 -> check2}
------Remainings in solution ------
{}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60545 : (? @ ?))

Decls :
,Exp : Modify (60580 : ?)

Decls :
,Exp : Modify (60588 : ? (?) (?))

Decls :
,Exp : Modify (60593 : ? (?) (? (?) ((? :: []))))

Decls :
,Exp : Modify (60598 : ? (?) (?))

Decls :
,Exp : Modify (60603 : ? (?) (?))

Decls :
,Exp : Modify (60616 : ? (?) ([]))

Decls :
}
-----------------------------
Patch
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec check m  =
let rec append m1 m2  =
 (match m1 with
|h::t -> if __list_mem__ (h) (m2) then append (t) (m2)
 else append (t) ((h :: m2))
|[] -> m2)
 in

let rec check2 m l  =
 (match m with
|V n -> l
|P (n, m2) -> if __list_mem__ (n) (l) then check2 (m2) (l)
 else check2 (m2) ((n :: l))
|C (m1, m2) -> append (check2 (m1) (l)) (check2 (m2) (l)))
 in

let rec check3 m l  =
 (match m with
|V n -> if __list_mem__ (n) (l) then true
 else false
|P (n, m2) -> check3 (m2) (append (l) ((n :: [])))
|C (m1, m2) -> (check3 (m1) (l) && check3 (m2) (l)))
 in
check3 (m) ([])

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/09/sub19.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check m  =
let rec make_area_list m  =
 (match m with
|V n -> []
|P (n, m1) -> (n :: make_area_list (m1))
|C (m1, m2) -> (make_area_list (m1) @ make_area_list (m2)))
 in

let rec match_list_with_station m l  =
 (match m with
|P (n, m1) -> match_list_with_station (m1) (l)
|C (m1, m2) -> (match_list_with_station (m1) (l) && match_list_with_station (m2) (l))
|V n -> if __list_exists__ (
fun x -> (x = n)) (l) then true
 else false)
 in
match_list_with_station (m) (make_area_list (m))

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_18/sub6.ml Score : 3
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec find_stack  =
fun v stack ->
 (match stack with
|hd::tl -> if (hd = v) then true
 else find_stack (v) (tl)
|[] -> false)

let rec check_inner  =
fun lam stack ->
 (match lam with
|V v -> if find_stack (v) (stack) then true
 else false
|P (v, l) -> check_inner (l) ((v :: stack))
|C (l1, l2) -> (check_inner (l1) (stack) && check_inner (l2) (stack)))

let check  : (lambda -> bool) =
fun lam -> check_inner (lam) ([])

-----------------------------
Call graph (sub)
-----------------------------
Node :
{__list_exists__ -> (48399 :
Input : (pred : (#973648 -> bool)) (lst : #973648 list)
Output : bool
Body :
 (match lst with
|[] -> false
|hd::tl -> (pred (hd) || __list_exists__ (pred) (tl))),

check -> (48423 :
Input : (m : lambda)
Output : bool
Body : match_list_with_station (m) (make_area_list (m)),

make_area_list -> (48424 :
Input : (m : lambda)
Output : string list
Body :
 (match m with
|V n -> []
|P (n, m1) -> (n :: make_area_list (m1))
|C (m1, m2) -> (make_area_list (m1) @ make_area_list (m2))),

match_list_with_station -> (48425 :
Input : (m : lambda) (l : string list)
Output : bool
Body :
 (match m with
|P (n, m1) -> match_list_with_station (m1) (l)
|C (m1, m2) -> (match_list_with_station (m1) (l) && match_list_with_station (m2) (l))
|V n -> if __list_exists__ (
fun (x : string) -> (x = n)) (l) then true
 else false)}
Edge :
{(48399, 48399) -> ,
(48423, 48424) -> ,
(48423, 48425) -> ,
(48424, 48424) -> ,
(48425, 48399) -> ,
(48425, 48425) -> }
Starting : 48423
-----------------------------
Call graph (sol)
-----------------------------
Node :
{check -> (48388 :
Input : (lam : lambda)
Output : bool
Body : check_inner (lam) ([]),

check_inner -> (48387 :
Input : (lam : lambda) (stack : string list)
Output : bool
Body :
 (match lam with
|V v -> if find_stack (v) (stack) then true
 else false
|P (v, l) -> check_inner (l) ((v :: stack))
|C (l1, l2) -> (check_inner (l1) (stack) && check_inner (l2) (stack))),

find_stack -> (48386 :
Input : v (stack : #973318 list)
Output : bool
Body :
 (match stack with
|hd::tl -> if (hd = v) then true
 else find_stack (v) (tl)
|[] -> false)}
Edge :
{(48386, 48386) -> ,
(48387, 48386) -> ,
(48387, 48387) -> ,
(48388, 48387) -> }
Starting : 48388
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{__list_exists__ -> find_stack,
check -> check,
match_list_with_station -> check_inner}
------Remainings in solution ------
{}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60540 : ?)

Decls :
,Exp : Modify (60545 : ? (?) ((? :: ?)))

Decls :
,Exp : Modify (60550 : ? (?) (?))

Decls :
,Exp : Modify (60555 : ? (?) (?))

Decls :
,Exp : Modify (60564 : ? (?) (?))

Decls :
,Exp : Modify (60575 : ? (?) ([]))

Decls :
}
-----------------------------
Patch
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check m  =
let rec make_area_list m  =
 (match m with
|V n -> []
|P (n, m1) -> (n :: make_area_list (m1))
|C (m1, m2) -> (make_area_list (m1) @ make_area_list (m2)))
 in

let rec match_list_with_station m l  =
 (match m with
|P (n, m1) -> match_list_with_station (m1) ((n :: l))
|C (m1, m2) -> (match_list_with_station (m1) (l) && match_list_with_station (m2) (l))
|V n -> if __list_exists__ (
fun x -> (x = n)) (l) then true
 else false)
 in
match_list_with_station (m) ([])

Time : 6.08513307571

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/09/sub20.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

-----------------------------
Submission
-----------------------------

exception Error of string
type lambda =
|C of (lambda * lambda)
|P of (string * lambda)
|V of string

let rec check met  =
let rec check a me  =
 (match me with
|V x -> if (x = a) then true
 else false
|P (q, V b) -> if (a = b) then true
 else false
|P (x, C (t, p)) ->
 (match (t, p) with
|(V e, V f) -> (check (x) (t) || check (x) (p))
|_ -> (check (x) (t) && check (x) (p)))
|P (x, P (e, f)) -> (check (x) (P ((e, f))) && check (e) (f))
|C (x, y) ->
 (match (x, y) with
|(V e, V f) -> (check (a) (x) || check (a) (y))
|_ -> (check (a) (x) && check (a) (x))))
 in

 (match met with
|P (b, c) -> check (b) (c)
|_ -> raise Error ("Illegal input"))

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_18/sub9.ml Score : 0
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking lam lst  =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check  : (lambda -> bool) =
fun lam -> checking (lam) ([])

let _  = check (P (("a", V ("a"))))

let _  = check (P (("a", P (("a", V ("a"))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("b"))))))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("a"))))))))

let _  = check (P (("a", V ("b"))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("c"))))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("c"))))))))

-----------------------------
Call graph (sub)
-----------------------------
Node :
{check -> (47099 :
Input : (met : lambda)
Output : bool
Body :
 (match met with
|P (b, c) -> check (b) (c)
|_ -> raise Error ("Illegal input"))}
Edge :
{(47099, 47100) -> ,
(47100, 47100) -> }
Starting : 47099
-----------------------------
Call graph (sol)
-----------------------------
Node :
{check -> (47065 :
Input : (lam : lambda)
Output : bool
Body : checking (lam) ([]),

checking -> (47064 :
Input : (lam : lambda) (lst : string list)
Output : bool
Body :
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))}
Edge :
{(47064, 47064) -> ,
(47065, 47064) -> }
Starting : 47065
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{check -> check}
------Remainings in solution ------
{checking}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60614 : ? (?) ([]))

Decls :

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

Callers : {check}
}
-----------------------------
Patch
-----------------------------

exception Error of string
type lambda =
|C of (lambda * lambda)
|P of (string * lambda)
|V of string

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check met  =
let rec check a me  =
 (match me with
|V x -> if (x = a) then true
 else false
|P (q, V b) -> if (a = b) then true
 else false
|P (x, C (t, p)) ->
 (match (t, p) with
|(V e, V f) -> (check (x) (t) || check (x) (p))
|_ -> (check (x) (t) && check (x) (p)))
|P (x, P (e, f)) -> (check (x) (P ((e, f))) && check (e) (f))
|C (x, y) ->
 (match (x, y) with
|(V e, V f) -> (check (a) (x) || check (a) (y))
|_ -> (check (a) (x) && check (a) (x))))
 in
checking (met) ([])

Time : 0.00232815742493

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/10/sub21.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec check met  =
let rec check met lst  =
 (match met with
|V id -> __list_mem__ (id) (lst)
|P (id, m) -> check (m) ((lst @ [id]))
|C (m1, m2) -> (check (m1) (lst) && check (m2) (lst)))
 in

 (match met with
|V id -> false
|P (id, m) -> check (m) ([id])
|C (m1, m2) -> false)

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_18/sub9.ml Score : 2
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking lam lst  =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check  : (lambda -> bool) =
fun lam -> checking (lam) ([])

let _  = check (P (("a", V ("a"))))

let _  = check (P (("a", P (("a", V ("a"))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("b"))))))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("a"))))))))

let _  = check (P (("a", V ("b"))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("c"))))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("c"))))))))

-----------------------------
Call graph (sub)
-----------------------------
Node :
{__list_mem__ -> (47074 :
Input : elem (lst : #965819 list)
Output : bool
Body :
 (match lst with
|[] -> false
|hd::tl -> ((hd = elem) || __list_mem__ (elem) (tl))),

check -> (47099 :
Input : (met : lambda)
Output : bool
Body :
 (match met with
|V id -> false
|P (id, m) -> check (m) ([id])
|C (m1, m2) -> false)}
Edge :
{(47074, 47074) -> ,
(47099, 47100) -> ,
(47100, 47074) -> ,
(47100, 47100) -> }
Starting : 47099
-----------------------------
Call graph (sol)
-----------------------------
Node :
{check -> (47065 :
Input : (lam : lambda)
Output : bool
Body : checking (lam) ([]),

checking -> (47064 :
Input : (lam : lambda) (lst : string list)
Output : bool
Body :
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))}
Edge :
{(47064, 47064) -> ,
(47065, 47064) -> }
Starting : 47065
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{__list_mem__ -> checking,
check -> check}
------Remainings in solution ------
{}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60560 : ? (?) ([]))

Decls :
}
Fail to Repair

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/10/sub7.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec check lambda  =
 (match lambda with
|V var -> false
|P (var1, V var2) -> (var1 = var2)
|P (var1, P (var2, C (lambda1, lambda2))) -> ((check (P ((var1, lambda1))) && check (P ((var2, lambda2)))) || (check (P ((var1, lambda2))) && check (P ((var2, lambda1)))))
|P (var1, P (var2, lambda)) -> (check (P ((var1, lambda))) || check (P ((var2, lambda))))
|P (var, C (lambda1, lambda2)) -> (check (P ((var, lambda1))) && check (P ((var, lambda2))))
|C (lambda1, lambda2) -> (check (lambda1) && check (lambda2)))

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_18/sub9.ml Score : 0
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking lam lst  =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check  : (lambda -> bool) =
fun lam -> checking (lam) ([])

let _  = check (P (("a", V ("a"))))

let _  = check (P (("a", P (("a", V ("a"))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("b"))))))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("a"))))))))

let _  = check (P (("a", V ("b"))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("c"))))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("c"))))))))

-----------------------------
Call graph (sub)
-----------------------------
Node :
{check -> (45777 :
Input : (lambda : lambda)
Output : bool
Body :
 (match lambda with
|V var -> false
|P (var1, V var2) -> (var1 = var2)
|P (var1, P (var2, C (lambda1, lambda2))) -> ((check (P ((var1, lambda1))) && check (P ((var2, lambda2)))) || (check (P ((var1, lambda2))) && check (P ((var2, lambda1)))))
|P (var1, P (var2, lambda)) -> (check (P ((var1, lambda))) || check (P ((var2, lambda))))
|P (var, C (lambda1, lambda2)) -> (check (P ((var, lambda1))) && check (P ((var, lambda2))))
|C (lambda1, lambda2) -> (check (lambda1) && check (lambda2)))}
Edge :
{(45777, 45777) -> }
Starting : 45777
-----------------------------
Call graph (sol)
-----------------------------
Node :
{check -> (45743 :
Input : (lam : lambda)
Output : bool
Body : checking (lam) ([]),

checking -> (45742 :
Input : (lam : lambda) (lst : string list)
Output : bool
Body :
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))}
Edge :
{(45742, 45742) -> ,
(45743, 45742) -> }
Starting : 45743
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{check -> check}
------Remainings in solution ------
{checking}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60590 : ? (?) ([]))

Decls :

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

Callers : {check}
}
-----------------------------
Patch
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check lambda  = checking (lambda) ([])

Time : 0.00202703475952

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/11/sub13.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check m  =
let rec idCheck id_list m  =
let rec exists f l  =
 (match l with
|[] -> false
|h::t -> if (f = h) then true
 else exists (f) (t))
 in

 (match m with
|V a -> exists (a) (id_list)
|P (id1, m1) -> idCheck ((id1 :: id_list)) (m1)
|C (m1, m2) -> (idCheck (id_list) (m1) && idCheck (id_list) (m2)))
 in

 (match m with
|P (var, lambda) -> idCheck ((var :: [])) (lambda)
|_ -> false)

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_18/sub55.ml Score : 3
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checklambda  : (var list -> (lambda -> bool)) =
fun lst lam ->
 (match lam with
|V x -> __list_mem__ (x) (lst)
|P (x, l) -> checklambda ((x :: lst)) (l)
|C (l1, l2) -> (checklambda (lst) (l1) && checklambda (lst) (l2)))

let check  : (lambda -> bool) =
fun lam -> checklambda ([]) (lam)

-----------------------------
Call graph (sub)
-----------------------------
Node :
{check -> (48421 :
Input : (m : lambda)
Output : bool
Body :
 (match m with
|P (var, lambda) -> idCheck ((var :: [])) (lambda)
|_ -> false),

exists -> (48423 :
Input : (f : string) (l : string list)
Output : bool
Body :
 (match l with
|[] -> false
|h::t -> if (f = h) then true
 else exists (f) (t)),

idCheck -> (48422 :
Input : (id_list : string list) (m : lambda)
Output : bool
Body :
 (match m with
|V a -> exists (a) (id_list)
|P (id1, m1) -> idCheck ((id1 :: id_list)) (m1)
|C (m1, m2) -> (idCheck (id_list) (m1) && idCheck (id_list) (m2)))}
Edge :
{(48421, 48422) -> ,
(48422, 48422) -> ,
(48422, 48423) -> ,
(48423, 48423) -> }
Starting : 48421
-----------------------------
Call graph (sol)
-----------------------------
Node :
{__list_mem__ -> (48361 :
Input : elem (lst : #970275 list)
Output : bool
Body :
 (match lst with
|[] -> false
|hd::tl -> ((hd = elem) || __list_mem__ (elem) (tl))),

check -> (48387 :
Input : (lam : lambda)
Output : bool
Body : checklambda ([]) (lam),

checklambda -> (48386 :
Input : (lst : string list) (lam : lambda)
Output : bool
Body :
 (match lam with
|V x -> __list_mem__ (x) (lst)
|P (x, l) -> checklambda ((x :: lst)) (l)
|C (l1, l2) -> (checklambda (lst) (l1) && checklambda (lst) (l2)))}
Edge :
{(48361, 48361) -> ,
(48386, 48361) -> ,
(48386, 48386) -> ,
(48387, 48386) -> }
Starting : 48387
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{check -> check,
exists -> __list_mem__,
idCheck -> checklambda}
------Remainings in solution ------
{}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60525 : ?)

Decls :
,Exp : Modify (60536 : ((? = ?) || ? (?) (?)))

Decls :
,Exp : Modify (60538 : ?)

Decls :
,Exp : Modify (60543 : ? (?) (?))

Decls :
,Exp : Modify (60550 : ? ((? :: ?)) (?))

Decls :
,Exp : Modify (60555 : ? (?) (?))

Decls :
,Exp : Modify (60560 : ? (?) (?))

Decls :
,Exp : Modify (60573 : ? ([]) (?))

Decls :
}
-----------------------------
Patch
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check m  =
let rec idCheck id_list m  =
let rec exists f l  =
 (match l with
|[] -> false
|h::t -> if (f = h) then true
 else exists (f) (t))
 in

 (match m with
|V a -> exists (a) (id_list)
|P (id1, m1) -> idCheck ((id1 :: id_list)) (m1)
|C (m1, m2) -> (idCheck (id_list) (m1) && idCheck (id_list) (m2)))
 in
idCheck ([]) (m)

Time : 0.40553188324

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/11/sub16.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec check lambda  =
 (match lambda with
|P (a, V b) -> (a = b)
|P (a, C (b, c)) -> (check (P ((a, b))) && check (P ((a, c))))
|P (a, P (b, c)) -> check (P ((a, c)))
|C (_, _) -> false
|V _ -> false)

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_18/sub9.ml Score : 0
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking lam lst  =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check  : (lambda -> bool) =
fun lam -> checking (lam) ([])

let _  = check (P (("a", V ("a"))))

let _  = check (P (("a", P (("a", V ("a"))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("b"))))))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("a"))))))))

let _  = check (P (("a", V ("b"))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("c"))))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("c"))))))))

-----------------------------
Call graph (sub)
-----------------------------
Node :
{check -> (45777 :
Input : (lambda : lambda)
Output : bool
Body :
 (match lambda with
|P (a, V b) -> (a = b)
|P (a, C (b, c)) -> (check (P ((a, b))) && check (P ((a, c))))
|P (a, P (b, c)) -> check (P ((a, c)))
|C (_, _) -> false
|V _ -> false)}
Edge :
{(45777, 45777) -> }
Starting : 45777
-----------------------------
Call graph (sol)
-----------------------------
Node :
{check -> (45743 :
Input : (lam : lambda)
Output : bool
Body : checking (lam) ([]),

checking -> (45742 :
Input : (lam : lambda) (lst : string list)
Output : bool
Body :
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))}
Edge :
{(45742, 45742) -> ,
(45743, 45742) -> }
Starting : 45743
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{check -> check}
------Remainings in solution ------
{checking}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60550 : ? (?) ([]))

Decls :

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

Callers : {check}
}
-----------------------------
Patch
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check lambda  = checking (lambda) ([])

Time : 0.00201296806335

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/11/sub21.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec sub (l, a)  =
 (match l with
|[] -> []
|hd::tl -> if (hd = a) then sub ((tl, a))
 else (hd :: sub ((tl, a))))

let rec concat (a, b)  =
 (match a with
|[] -> b
|hd::tl -> (hd :: concat ((tl, b))))

let rec listsub (m : lambda)  =
 (match m with
|V a -> [a]
|P (a, b) -> sub ((listsub (b), a))
|C (a, b) -> concat ((listsub (a), listsub (b))))

let check (m : lambda)  =
 (match m with
|V a -> false
|P (a, b) -> if (sub ((listsub (b), a)) = []) then true
 else false
|C (a, b) -> false)

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/11/sub2.ml Score : 3
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec check lambda_input  =
let rec listStation m_input  =
 (match m_input with
|V n -> [n]
|P (n, m) -> deleteAll ((listStation (m), n))
|C (m1, m2) -> (listStation (m1) @ listStation (m2)))
and deleteAll (list_input, target)  =
 (match list_input with
|l::remain_list -> if (l = target) then deleteAll ((remain_list, target))
 else (l :: deleteAll ((remain_list, target)))
|[] -> [])
 in
if (listStation (lambda_input) = []) then true
 else false

-----------------------------
Call graph (sub)
-----------------------------
Node :
{check -> (49748 :
Input : (m : lambda)
Output : bool
Body :
 (match m with
|V a -> false
|P (a, b) -> if (sub ((listsub (b), a)) = []) then true
 else false
|C (a, b) -> false),

concat -> (49746 :
Input : ((a : #1000497 list), (b : #1000497 list))
Output : #1000497 list
Body :
 (match a with
|[] -> b
|hd::tl -> (hd :: concat ((tl, b)))),

listsub -> (49747 :
Input : (m : lambda)
Output : string list
Body :
 (match m with
|V a -> [a]
|P (a, b) -> sub ((listsub (b), a))
|C (a, b) -> concat ((listsub (a), listsub (b)))),

sub -> (49745 :
Input : ((l : #1000493 list), a)
Output : #1000493 list
Body :
 (match l with
|[] -> []
|hd::tl -> if (hd = a) then sub ((tl, a))
 else (hd :: sub ((tl, a))))}
Edge :
{(49745, 49745) -> ,
(49746, 49746) -> ,
(49747, 49745) -> ,
(49747, 49746) -> ,
(49747, 49747) -> ,
(49748, 49745) -> ,
(49748, 49747) -> }
Starting : 49748
-----------------------------
Call graph (sol)
-----------------------------
Node :
{check -> (49708 :
Input : (lambda_input : lambda)
Output : bool
Body : if (listStation (lambda_input) = []) then true
 else false,

deleteAll -> (49710 :
Input : ((list_input : string list), (target : string))
Output : string list
Body :
 (match list_input with
|l::remain_list -> if (l = target) then deleteAll ((remain_list, target))
 else (l :: deleteAll ((remain_list, target)))
|[] -> []),

listStation -> (49709 :
Input : (m_input : lambda)
Output : string list
Body :
 (match m_input with
|V n -> [n]
|P (n, m) -> deleteAll ((listStation (m), n))
|C (m1, m2) -> (listStation (m1) @ listStation (m2)))}
Edge :
{(49708, 49709) -> ,
(49709, 49709) -> ,
(49709, 49710) -> ,
(49710, 49710) -> }
Starting : 49708
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{check -> check,
listsub -> listStation,
sub -> deleteAll}
------Remainings in solution ------
{}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60525 : ?)

Decls :
,Exp : Modify (60527 : ?)

Decls :
,Exp : Modify (60528 : ?)

Decls :
,Exp : Modify (60534 : ? ((?, ?)))

Decls :
,Exp : Modify (60535 : ?)

Decls :
,Exp : Modify (60540 : ? ((?, ?)))

Decls :
,Exp : Modify (60554 : ?)

Decls :
,Exp : Modify (60555 : ?)

Decls :
,Exp : Modify (60563 : ? ((? (?), ?)))

Decls :
,Exp : Modify (60572 : (? (?) @ ? (?)))

Decls :
,Exp : Modify (60589 : if (? (?) = []) then true
 else false)

Decls :
}
-----------------------------
Patch
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec sub (l, a)  =
 (match l with
|[] -> []
|hd::tl -> if (hd = a) then sub ((tl, a))
 else (hd :: sub ((tl, a))))

let rec concat (a, b)  =
 (match a with
|[] -> b
|hd::tl -> (hd :: concat ((tl, b))))

let rec listsub (m : lambda)  =
 (match m with
|V a -> [a]
|P (a, b) -> sub ((listsub (b), a))
|C (a, b) -> concat ((listsub (a), listsub (b))))

let check (m : lambda)  = if (listsub (m) = []) then true
 else false

Time : 0.216038942337

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/11/sub3.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

exception Invalid_input of string

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check m  =
let rec check_sub (m, l)  =
let rec checkArea (s, l)  =
 (match l with
|[] -> false
|h::t -> if (h = s) then true
 else checkArea ((s, t)))
 in

 (match m with
|V s -> checkArea ((s, l))
|P (a, m) -> check_sub ((m, (a :: l)))
|C (m0, m1) -> (check_sub ((m0, l)) && check_sub ((m1, l))))
 in

 (match m with
|V s -> raise Invalid_input ("V only")
|_ -> check_sub ((m, [])))

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_16/sub97.ml Score : 3
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec mem  : ((var * var list) -> bool) =
fun (key, lst) ->
 (match lst with
|[] -> false
|hd::tl -> if (hd = key) then true
 else (false || mem ((key, tl))))

let check  : (lambda -> bool) =
fun lambda ->
let rec ch  : ((lambda * var list) -> bool) =
fun (lambda, lst) ->
 (match lambda with
|V x -> mem ((x, lst))
|P (x, p) -> ch ((p, (x :: lst)))
|C (p, q) -> (ch ((p, lst)) && ch ((q, lst))))
 in
ch ((lambda, []))

-----------------------------
Call graph (sub)
-----------------------------
Node :
{check -> (48423 :
Input : (m : lambda)
Output : bool
Body :
 (match m with
|V s -> raise Invalid_input ("V only")
|_ -> check_sub ((m, []))),

checkArea -> (48425 :
Input : ((s : string), (l : string list))
Output : bool
Body :
 (match l with
|[] -> false
|h::t -> if (h = s) then true
 else checkArea ((s, t))),

check_sub -> (48424 :
Input : ((m : lambda), (l : string list))
Output : bool
Body :
 (match m with
|V s -> checkArea ((s, l))
|P (a, m) -> check_sub ((m, (a :: l)))
|C (m0, m1) -> (check_sub ((m0, l)) && check_sub ((m1, l))))}
Edge :
{(48423, 48424) -> ,
(48424, 48424) -> ,
(48424, 48425) -> ,
(48425, 48425) -> }
Starting : 48423
-----------------------------
Call graph (sol)
-----------------------------
Node :
{ch -> (48388 :
Input : ((lambda : lambda), (lst : string list))
Output : bool
Body :
 (match lambda with
|V x -> mem ((x, lst))
|P (x, p) -> ch ((p, (x :: lst)))
|C (p, q) -> (ch ((p, lst)) && ch ((q, lst)))),

check -> (48387 :
Input : (lambda : lambda)
Output : bool
Body : ch ((lambda, [])),

mem -> (48386 :
Input : (key, (lst : #973318 list))
Output : bool
Body :
 (match lst with
|[] -> false
|hd::tl -> if (hd = key) then true
 else (false || mem ((key, tl))))}
Edge :
{(48386, 48386) -> ,
(48387, 48388) -> ,
(48388, 48386) -> ,
(48388, 48388) -> }
Starting : 48387
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{check -> check,
checkArea -> mem,
check_sub -> ch}
------Remainings in solution ------
{}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60525 : ?)

Decls :
,Exp : Modify (60527 : ?)

Decls :
,Exp : Modify (60528 : ?)

Decls :
,Exp : Modify (60535 : (false || ? ((?, ?))))

Decls :
,Exp : Modify (60538 : ?)

Decls :
,Exp : Modify (60543 : ? ((?, ?)))

Decls :
,Exp : Modify (60550 : ? ((?, (? :: ?))))

Decls :
,Exp : Modify (60555 : ? ((?, ?)))

Decls :
,Exp : Modify (60560 : ? ((?, ?)))

Decls :
,Exp : Modify (60573 : ? ((?, [])))

Decls :
}
-----------------------------
Patch
-----------------------------

exception Invalid_input of string

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check m  =
let rec check_sub (m, l)  =
let rec checkArea (s, l)  =
 (match l with
|[] -> false
|h::t -> if (h = s) then true
 else checkArea ((s, t)))
 in

 (match m with
|V s -> checkArea ((s, l))
|P (a, m) -> check_sub ((m, (a :: l)))
|C (m0, m1) -> (check_sub ((m0, l)) && check_sub ((m1, l))))
 in
check_sub ((m, []))

Time : 0.0064868927002

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/11/sub5.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec check a  =
 (match a with
|V _ -> raise Invalid_argument ("check")
|C (a, b) -> raise Invalid_argument ("check")
|P (a, V b) -> if (a = b) then true
 else false
|P (a, C (V b, V c)) -> if ((a = b) || (a = c)) then true
 else false
|P (a, C (P (b, V c), V d)) -> if ((a = c) || (a = d)) then true
 else false
|P (a, C (V b, P (c, V d))) -> if ((a = b) || (a = d)) then true
 else false
|P (a, b) -> check (b))

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_18/sub9.ml Score : 0
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking lam lst  =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check  : (lambda -> bool) =
fun lam -> checking (lam) ([])

let _  = check (P (("a", V ("a"))))

let _  = check (P (("a", P (("a", V ("a"))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("b"))))))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("a"))))))))

let _  = check (P (("a", V ("b"))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("c"))))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("c"))))))))

-----------------------------
Call graph (sub)
-----------------------------
Node :
{check -> (45777 :
Input : (a : lambda)
Output : bool
Body :
 (match a with
|V _ -> raise Invalid_argument ("check")
|C (a, b) -> raise Invalid_argument ("check")
|P (a, V b) -> if (a = b) then true
 else false
|P (a, C (V b, V c)) -> if ((a = b) || (a = c)) then true
 else false
|P (a, C (P (b, V c), V d)) -> if ((a = c) || (a = d)) then true
 else false
|P (a, C (V b, P (c, V d))) -> if ((a = b) || (a = d)) then true
 else false
|P (a, b) -> check (b))}
Edge :
{(45777, 45777) -> }
Starting : 45777
-----------------------------
Call graph (sol)
-----------------------------
Node :
{check -> (45743 :
Input : (lam : lambda)
Output : bool
Body : checking (lam) ([]),

checking -> (45742 :
Input : (lam : lambda) (lst : string list)
Output : bool
Body :
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))}
Edge :
{(45742, 45742) -> ,
(45743, 45742) -> }
Starting : 45743
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{check -> check}
------Remainings in solution ------
{checking}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60571 : ? (?) ([]))

Decls :

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

Callers : {check}
}
-----------------------------
Patch
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check a  = checking (a) ([])

Time : 0.00197386741638

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/11/sub6.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec check a  =
 (match a with
|V _ -> raise Invalid_argument ("check")
|C (a, b) -> raise Invalid_argument ("check")
|P (a, V b) -> if (a = b) then true
 else false
|P (a, C (V b, V c)) -> if ((a = b) || (a = c)) then true
 else false
|P (a, C (P (b, V c), V d)) -> if ((a = c) && (a = d)) then true
 else false
|P (a, C (V b, P (c, V d))) -> if ((a = b) && (a = d)) then true
 else false
|P (a, b) -> check (b))

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_18/sub9.ml Score : 0
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking lam lst  =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check  : (lambda -> bool) =
fun lam -> checking (lam) ([])

let _  = check (P (("a", V ("a"))))

let _  = check (P (("a", P (("a", V ("a"))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("b"))))))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("a"))))))))

let _  = check (P (("a", V ("b"))))

let _  = check (P (("a", C ((V ("a"), P (("b", V ("c"))))))))

let _  = check (P (("a", P (("b", C ((V ("a"), V ("c"))))))))

-----------------------------
Call graph (sub)
-----------------------------
Node :
{check -> (45777 :
Input : (a : lambda)
Output : bool
Body :
 (match a with
|V _ -> raise Invalid_argument ("check")
|C (a, b) -> raise Invalid_argument ("check")
|P (a, V b) -> if (a = b) then true
 else false
|P (a, C (V b, V c)) -> if ((a = b) || (a = c)) then true
 else false
|P (a, C (P (b, V c), V d)) -> if ((a = c) && (a = d)) then true
 else false
|P (a, C (V b, P (c, V d))) -> if ((a = b) && (a = d)) then true
 else false
|P (a, b) -> check (b))}
Edge :
{(45777, 45777) -> }
Starting : 45777
-----------------------------
Call graph (sol)
-----------------------------
Node :
{check -> (45743 :
Input : (lam : lambda)
Output : bool
Body : checking (lam) ([]),

checking -> (45742 :
Input : (lam : lambda) (lst : string list)
Output : bool
Body :
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))}
Edge :
{(45742, 45742) -> ,
(45743, 45742) -> }
Starting : 45743
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{check -> check}
------Remainings in solution ------
{checking}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60571 : ? (?) ([]))

Decls :

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

Callers : {check}
}
-----------------------------
Patch
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let rec checking (lam : lambda) (lst : string list)  : bool =
 (match lst with
|[] ->
 (match lam with
|V x -> false
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false)
|hd::tl ->
 (match lam with
|V x -> if (x = hd) then true
 else checking (lam) (tl)
|P (x, l) -> checking (l) ((x :: lst))
|C (l1, l2) -> if ((checking (l1) (lst) = true) && (checking (l2) (lst) = true)) then true
 else false))

let rec check a  = checking (a) ([])

Time : 0.00202679634094

../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/11/sub7.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases
-----------------------------
Submission
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check m  =
let rec areaList m1  =
 (match m1 with
|P (a, b) -> (a :: areaList (b))
|_ -> [])
 in

let rec stationList m2  =
 (match m2 with
|V a -> [a]
|P (a, b) -> stationList (b)
|C (a, b) -> (stationList (a) @ stationList (b)))
 in

let rec searchArea al st  =
 (match al with
|[] -> false
|hd::tl -> if (hd = st) then true
 else searchArea (tl) (st))
 in

let rec matching al sl  =
 (match sl with
|[] -> true
|hd::tl -> if (searchArea (al) (hd) = false) then false
 else matching (al) (tl))
 in

let _  = areaList (m)
 in

let _  = stationList (m)
 in
matching (areaList (m)) (stationList (m))

-----------------------------
Most Similar Sol ../benchmarks_correct/All_lambda/k_15/sub24.ml Score : 2
-----------------------------

type lambda =
|C of (lambda * lambda)
|P of (var * lambda)
|V of var
and var = string

let check  : (lambda -> bool) =
fun e ->
let rec check x y  =
 (match x with
|V x1 -> __list_mem__ (x1) (y)
|C (x1, y1) -> (check (x1) (y) && check (y1) (y))
|P (x1, y1) -> check (y1) ((x1 :: y)))
 in
check (e) ([])

-----------------------------
Call graph (sub)
-----------------------------
Node :
{areaList -> (51066 :
Input : (m1 : lambda)
Output : string list
Body :
 (match m1 with
|P (a, b) -> (a :: areaList (b))
|_ -> []),

check -> (51065 :
Input : (m : lambda)
Output : bool
Body :
let _  : string list = areaList (m)
 in

let _  : string list = stationList (m)
 in
matching (areaList (m)) (stationList (m)),

matching -> (51069 :
Input : (al : string list) (sl : string list)
Output : bool
Body :
 (match sl with
|[] -> true
|hd::tl -> if (searchArea (al) (hd) = false) then false
 else matching (al) (tl)),

searchArea -> (51068 :
Input : (al : string list) (st : string)
Output : bool
Body :
 (match al with
|[] -> false
|hd::tl -> if (hd = st) then true
 else searchArea (tl) (st)),

stationList -> (51067 :
Input : (m2 : lambda)
Output : string list
Body :
 (match m2 with
|V a -> [a]
|P (a, b) -> stationList (b)
|C (a, b) -> (stationList (a) @ stationList (b)))}
Edge :
{(51065, 51066) -> ,
(51065, 51067) -> ,
(51065, 51069) -> ,
(51066, 51066) -> ,
(51067, 51067) -> ,
(51068, 51068) -> ,
(51069, 51068) -> ,
(51069, 51069) -> }
Starting : 51065
-----------------------------
Call graph (sol)
-----------------------------
Node :
{__list_mem__ -> (51005 :
Input : elem (lst : #984823 list)
Output : bool
Body :
 (match lst with
|[] -> false
|hd::tl -> ((hd = elem) || __list_mem__ (elem) (tl))),

check -> (51030 :
Input : (e : lambda)
Output : bool
Body : check (e) ([])}
Edge :
{(51005, 51005) -> ,
(51030, 51031) -> ,
(51031, 51005) -> ,
(51031, 51031) -> }
Starting : 51030
-----------------------------
Matching Info
-----------------------------
------Match Informations (submissoin)------
{check -> check,
matching -> __list_mem__}
------Remainings in solution ------
{}
-----------------------------
Templates
-----------------------------
{Exp : Modify (60560 : ?)

Decls :
,Exp : Modify (60561 : false)

Decls :
,Exp : Modify (60575 : ((? = ?) || ? (?) (?)))

Decls :
,Exp : Modify (60593 : ? (?) ([]))

Decls :
}

Error : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/11/sub8.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/12/sub10.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/12/sub17.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/12/sub19.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/12/sub20.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/12/sub31.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/12/sub43.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/12/sub48.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/12/sub8.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/13/sub10.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/13/sub2.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/13/sub29.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/13/sub30.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/13/sub47.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/13/sub54.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/13/sub55.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/13/sub58.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/13/sub64.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/13/sub66.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/13/sub67.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/14/sub34.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/14/sub40.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/14/sub66.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/15/sub29.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/15/sub31.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/15/sub54.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/15/sub7.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/15/sub74.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/15/sub75.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/15/sub8.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/15/sub86.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/17/sub140.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/17/sub30.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/17/sub46.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/17/sub6.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/17/sub85.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/17/sub87.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/17/sub89.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub14.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub15.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub16.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub2.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub20.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub21.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub35.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub37.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub38.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub39.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub47.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub52.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub53.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub56.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub57.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub58.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub60.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub61.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub63.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub67.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub68.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub69.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub73.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub75.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub76.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub77.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub79.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub81.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_15/sub83.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub1.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub10.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub101.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub102.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub109.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub11.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub112.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub121.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub123.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub124.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub125.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub128.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub13.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub16.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub20.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub25.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub26.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub36.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub37.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub39.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub40.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub47.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub54.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub57.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub60.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub62.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub66.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub7.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub70.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub77.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub80.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub81.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub87.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub90.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_16/sub96.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub15.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub18.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub23.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub25.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub27.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub3.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub4.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub42.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub45.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub57.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub58.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub59.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub62.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub63.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub68.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_17/sub74.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_18/sub14.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_18/sub17.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_18/sub20.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_18/sub25.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_18/sub38.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_18/sub4.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_18/sub43.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases

Error occurs : ../engine/main.native -dd -submission ../benchmarks_incorrect/All_lambda/k_18/sub5.ml -solutions ../benchmarks_correct/All_lambda -entry check -testcases ../testcases/lambda_testcases